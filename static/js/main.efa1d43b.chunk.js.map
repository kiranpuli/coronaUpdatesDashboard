{"version":3,"sources":["components/Foot.js","App.js","index.js"],"names":["Foot","className","href","class","App","React","Component","constructor","super","state","confirmed","recovered","deaths","g","type","data","labels","datasets","label","backgroundColor","countries","cc","this","getCountryData","bind","getData","componentDidMount","Axios","get","defaultRes","resCountries","graph","map","value","push","setState","i","reportDate","totalConfirmed","totalRecovered","total","getCountries","c","key","e","target","fetch","then","response","json","forEach","date","selectedCountry","render","onChange","defaultValue","hidden","options","maintainAspectRatio","responsive","role","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.efa1d43b.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default function Foot() {\r\n  return(\r\n    <footer className=\"mt-5 text-light text-center btn-block\">\r\n      <div className=\"bg-dark text-light text-left\">\r\n      <h5><u>About this data</u></h5>\r\n      <p>\r\n        <strong>It changes rapidly</strong>\r\n        <br/>\r\n        This data changes rapidly and might not reflect some cases still being reported.\r\n      </p>\r\n      <p>\r\n        <strong>It only includes people tested</strong>\r\n        <br/>\r\n        Cases only include people who were tested and confirmed positive. Testing rules and availability vary by country. Some areas may not have data because they haven’t published their data or haven’t done so recently.\r\n      </p>\r\n      <p>\r\n        <strong>It comes from CSSE</strong>\r\n        <br/>\r\n        Data comes from Coronavirus COVID-19 Global Cases by the Center for Systems Science and Engineering <a href=\"https://coronavirus.jhu.edu/map.html\">(CSSE)</a> at Johns Hopkins University (JHU), and cases are constantly updated from resources around the world. Daily situation reports are also available on the <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports\">World Health Organization site.</a>\r\n      </p>\r\n      </div>\r\n      <h6>Made by Kiran Puli  </h6>\r\n          <a href=\"https://www.linkedin.com/in/kiran-p-40260b15b/\">\r\n            <i class=\"fab fa-linkedin-in  btn btn-outline-info\"></i>\r\n          </a>\r\n          <a href=\"https://github.com/kiranpuli\">\r\n            <i class=\"fab fa-github  btn btn-outline-info\"></i>\r\n          </a><br/>\r\n      <p><a href=\"https://github.com/kiranpuli/coronaUpdatesDashboard\" className=\"text-info\"><u>Code</u></a>available on Github</p>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Axios from \"axios\";\nimport { Bar} from \"react-chartjs-2\";\nimport \"./styles.css\";\nimport Foot from \"./components/Foot\"\n\nexport default class App extends React.Component {\n  constructor(){\n    super()\n    this.getCountryData=this.getCountryData.bind(this);\n    this.getData=this.getData.bind(this);\n    \n  }\n  state = {\n    confirmed: 0,\n    recovered: 0,\n    deaths: 0,\n    g:{\n      type:'bar',\n      data:{\n        labels:[],\n        datasets:[{\n          label:\"Confirmed\",\n          data:[],\n          backgroundColor: 'yellow',\n        },\n        {\n          label:\"Recovered\",\n          data:[],\n          backgroundColor: 'green',\n        },{\n          label:\"Deaths\",\n          data:[],\n          backgroundColor: 'red',\n        },\n      ]\n      }\n    },\n    countries: [],\n    cc:\"WorldWide\"\n  };\n  componentDidMount() {\n    this.getData();\n  }\n  async getData() {\n    const defaultRes = await Axios.get(\"https://covid19.mathdro.id/api\");\n    const resCountries= await Axios.get(\"https://covid19.mathdro.id/api/countries\")\n    const graph = await Axios.get(\"https://covid19.mathdro.id/api/daily\")\n    resCountries.data.countries.map((value)=>{return this.state.countries.push(value['name'])})\n    this.setState({\n      confirmed: defaultRes.data.confirmed.value,\n      recovered: defaultRes.data.recovered.value,\n      deaths: defaultRes.data.deaths.value,\n      cc:\"WorldWide\"\n    });\n    \n    graph.data.map((i)=>{\n      this.state.g.data.labels.push(i.reportDate)\n      this.state.g.data.datasets[0].data.push(i.totalConfirmed)\n      this.state.g.data.datasets[1].data.push(i.totalRecovered)\n      this.state.g.data.datasets[2].data.push(i.deaths.total)\n    })\n    \n    \n  }\n\n  getCountries(){\n    return this.state.countries.map((c,i)=>{return <option key={i}>{c}</option>})\n  }\n\n   async getCountryData(e){\n    const c=e.target.value\n    if(c===\"WorldWide\"){\n      this.state.g.data.labels=[]\n      this.state.g.data.datasets[0].data=[]\n      this.state.g.data.datasets[1].data=[]\n      this.state.g.data.datasets[2].data=[]\n      this.getData();\n    }\n    else{\n      this.state.g.data.labels=[]\n      this.state.g.data.datasets[0].data=[]\n      this.state.g.data.datasets[1].data=[]\n      this.state.g.data.datasets[2].data=[]\n      fetch(\"https://pomber.github.io/covid19/timeseries.json\")\n      .then(response => response.json())\n      .then(data => {\n        data[c].forEach((i) =>{\n          this.state.g.data.labels.push(i.date)\n          this.state.g.data.datasets[0].data.push(i.confirmed)\n          this.state.g.data.datasets[1].data.push(i.recovered)\n          this.state.g.data.datasets[2].data.push(i.deaths)\n        })\n      })\n      const selectedCountry= await Axios.get(`https://covid19.mathdro.id/api/countries/${c}`)\n      this.setState({\n        confirmed: selectedCountry.data.confirmed.value,\n        recovered: selectedCountry.data.recovered.value,\n        deaths: selectedCountry.data.deaths.value,\n        cc:c\n      });\n\n    }\n  }\n  render() {\n\n    const options = {\n      maintainAspectRatio: true,\t// Don't maintain w/h ratio\n      responsive:true\n    }\n\n    return (\n      <div className=\"text-danger\">\n        <h1 className=\"jumbotron text-center bg-dark \">\n          Corona-Virus Outbreak Dashboard\n        </h1>\n        {/* <select className=\"form-control w-50 mt-3 mb-3\" onChange={this.getCountryData}>\n        <option defaultValue> WorldWide </option> \n        {this.getCountries()}\n        </select> */}\n        <div className=\"row \">\n          <div className=\"col-md-4\">\n            <div className=\"card text-white bg-warning mb-3 p-5\">\n              <h2>\n                <i className=\"fas fa-hospital-user\" /> Confirmed\n              </h2>\n              <h2 className=\"card-title\">{this.state.confirmed}</h2>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-white bg-success mb-3 p-5\">\n              <h2>\n                <i className=\"fas fa-user-plus\" /> Recovered\n              </h2>\n              <h2 className=\"card-title\">{this.state.recovered}</h2>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-white bg-danger mb-3 p-5\">\n              <h2>\n                <i className=\"fas fa-procedures\" /> Deaths\n              </h2>\n              <h2 className=\"card-title\">{this.state.deaths}</h2>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-3\">\n        <select className=\"form-control w-50 mt-3 mb-3\" onChange={this.getCountryData}>\n        <option defaultValue hidden> WorldWide </option> \n        {this.getCountries()}\n        </select>\n        <h3 className=\"text-center btn-block\">{this.state.cc} Statistics</h3>\n        <Bar\n          data={this.state.g.data}\n          options={options}\n        />\n\n        <div class=\"alert alert-warning\" role=\"alert\">\n          Try re-sizing the window ( for pc ) / rotating device ( mobile ) if graph is not showing up\n        </div>\n        </div>\n        \n        <Foot/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}